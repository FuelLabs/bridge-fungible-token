/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { FuelMessageInbox } from "../FuelMessageInbox";

export class FuelMessageInbox__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: FuelMessageInboxLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      FuelMessageInbox__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: FuelMessageInboxLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$53fd99b9b196b97281e9300b007c31c710\\$__", "g"),
      linkLibraryAddresses["__$53fd99b9b196b97281e9300b007c31c710$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    messageOutbox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FuelMessageInbox> {
    return super.deploy(
      messageOutbox,
      overrides || {}
    ) as Promise<FuelMessageInbox>;
  }
  getDeployTransaction(
    messageOutbox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(messageOutbox, overrides || {});
  }
  attach(address: string): FuelMessageInbox {
    return super.attach(address) as FuelMessageInbox;
  }
  connect(signer: Signer): FuelMessageInbox__factory {
    return super.connect(signer) as FuelMessageInbox__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FuelMessageInbox {
    return new Contract(address, _abi, signerOrProvider) as FuelMessageInbox;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FuelMessageOutbox",
        name: "messageOutbox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "RelayedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "ETH_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FUEL_BASE_ASSET_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MESSAGE_OUTBOX",
    outputs: [
      {
        internalType: "contract FuelMessageOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageRoot",
        type: "bytes32",
      },
    ],
    name: "commitMessageRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "recipient",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "computeMessageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getFuelBaseAssetDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMessageSender",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "recipient",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numLeaves",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "proof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct OutputMessageProof",
        name: "merkleProof",
        type: "tuple",
      },
    ],
    name: "relayMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "s_messageRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "s_successfulMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "recipient",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "serializeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "messageRootCommitter",
        type: "address",
      },
    ],
    name: "setMessageRootCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "messageRootTimelock",
        type: "uint64",
      },
    ],
    name: "setMessageRootTimelock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516118ca3803806118ca83398101604081905261002f916100cf565b6100383361007f565b6000805460ff60a01b19169055600180556001600160a01b031660805261dead600255600380546001600160e01b03191633600160a01b600160e01b0319161790556100ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e157600080fd5b81516001600160a01b03811681146100f857600080fd5b9392505050565b6080516117a9610121600039600081816103ba0152610a0f01526117a96000f3fe6080604052600436106101485760003560e01c80636ab78038116100c05780638da5cb5b1161007457806392cd1ff21161005957806392cd1ff214610393578063cd79f25a146103a8578063f2fde38b146103dc57600080fd5b80638da5cb5b1461032b57806390d245121461037757600080fd5b806376167a89116100a557806376167a89146102e15780638456cb59146102f65780638bfa66681461030b57600080fd5b80636ab780381461029c578063715018a6146102cc57600080fd5b80633f4ba83a11610117578063534d25aa116100fc578063534d25aa146102205780635a291fc6146102335780635c975abb1461026057600080fd5b80633f4ba83a146101f657806340de1b1a1461020b57600080fd5b806319d371fb146101545780631f501e9714610187578063258f2bb4146101a95780632c275ada146101c957600080fd5b3661014f57005b600080fd5b34801561016057600080fd5b5061017461016f3660046111fa565b6103fc565b6040519081526020015b60405180910390f35b34801561019357600080fd5b506101a76101a236600461126b565b61041f565b005b3480156101b557600080fd5b506101a76101c4366004611284565b6104b3565b3480156101d557600080fd5b506101e96101e43660046111fa565b610561565b60405161017e919061133b565b34801561020257600080fd5b506101a7610599565b34801561021757600080fd5b50610174600981565b6101a761022e36600461134e565b61060a565b34801561023f57600080fd5b5061017461024e36600461126b565b60046020526000908152604090205481565b34801561026c57600080fd5b5060005474010000000000000000000000000000000000000000900460ff165b604051901515815260200161017e565b3480156102a857600080fd5b5061028c6102b736600461126b565b60056020526000908152604090205460ff1681565b3480156102d857600080fd5b506101a7610b9a565b3480156102ed57600080fd5b50610174610c0b565b34801561030257600080fd5b506101a7610c69565b34801561031757600080fd5b506101a76103263660046113ec565b610cd8565b34801561033757600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161017e565b34801561038357600080fd5b506040516009815260200161017e565b34801561039f57600080fd5b50610174601281565b3480156103b457600080fd5b506103527f000000000000000000000000000000000000000000000000000000000000000081565b3480156103e857600080fd5b506101a76103f7366004611284565b610d92565b600061041461040f888888888888610561565b610e8b565b979650505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff16331461048b5760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206e6f7420636f6d6d697474657200000000000000000000000060448201526064015b60405180910390fd5b6000818152600460205260409020546104b05760008181526004602052604090204290555b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461051a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610482565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b606086868686868660405160200161057e96959493929190611407565b60405160208183030381529060405290509695505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610482565b610608610ee3565b565b6002600154141561065d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610482565b600260015560005474010000000000000000000000000000000000000000900460ff16156106cd5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610482565b60006106dd8888888888886103fc565b905060006106ed6009601261148a565b6106f890600a6115c1565b61070c9067ffffffffffffffff88166115cd565b83356000908152600460205260409020549091508061076d5760405162461bcd60e51b815260206004820152600c60248201527f496e76616c696420726f6f7400000000000000000000000000000000000000006044820152606401610482565b60035461079c9074010000000000000000000000000000000000000000900467ffffffffffffffff164261148a565b8111156107eb5760405162461bcd60e51b815260206004820152600f60248201527f526f6f742074696d656c6f636b656400000000000000000000000000000000006044820152606401610482565b600073__$53fd99b9b196b97281e9300b007c31c710$__63ee16a3ed86600001358660405160200161081f91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905261085a60608a018a61160a565b8a602001358b604001356040518763ffffffff1660e01b815260040161088596959493929190611672565b60206040518083038186803b15801561089d57600080fd5b505af41580156108b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d591906116ed565b9050806109245760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610482565b60008481526005602052604090205460ff16156109835760405162461bcd60e51b815260206004820152601760248201527f4d65737361676520616c72656164792072656c617965640000000000000000006044820152606401610482565b61afc85a10156109d55760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742067617320666f722072656c61790000000000006044820152606401610482565b60028b90558215610a81576040517ff14210a6000000000000000000000000000000000000000000000000000000008152600481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063f14210a690602401600060405180830381600087803b158015610a6857600080fd5b505af1158015610a7c573d6000803e3d6000fd5b505050505b6000610ad48b619c405a610a95919061148a565b8660008c8c8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fc292505050565b50905080610b245760405162461bcd60e51b815260206004820152601460248201527f4d6573736167652072656c6179206661696c65640000000000000000000000006044820152606401610482565b61dead60025560008581526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555186917f4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c91a250506001805550505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610482565b610608600061104d565b60025460009061dead1415610c625760405162461bcd60e51b815260206004820152601e60248201527f43757272656e74206d6573736167652073656e646572206e6f742073657400006044820152606401610482565b5060025490565b60005473ffffffffffffffffffffffffffffffffffffffff163314610cd05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610482565b6106086110c2565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d3f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610482565b6003805467ffffffffffffffff90921674010000000000000000000000000000000000000000027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610df95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610482565b73ffffffffffffffffffffffffffffffffffffffff8116610e825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610482565b6104b08161104d565b6000600282604051610e9d919061170f565b602060405180830381855afa158015610eba573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610edd919061172b565b92915050565b60005474010000000000000000000000000000000000000000900460ff16610f4d5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610482565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b6000606060008060008661ffff1667ffffffffffffffff811115610fe857610fe8611744565b6040519080825280601f01601f191660200182016040528015611012576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115611033578692505b828152826000602083013e90999098509650505050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005474010000000000000000000000000000000000000000900460ff161561112d5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610482565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f983390565b803567ffffffffffffffff811681146111ac57600080fd5b919050565b60008083601f8401126111c357600080fd5b50813567ffffffffffffffff8111156111db57600080fd5b6020830191508360208285010111156111f357600080fd5b9250929050565b60008060008060008060a0878903121561121357600080fd5b86359550602087013594506040870135935061123160608801611194565b9250608087013567ffffffffffffffff81111561124d57600080fd5b61125989828a016111b1565b979a9699509497509295939492505050565b60006020828403121561127d57600080fd5b5035919050565b60006020828403121561129657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146112ba57600080fd5b9392505050565b60005b838110156112dc5781810151838201526020016112c4565b838111156112eb576000848401525b50505050565b600081518084526113098160208601602086016112c1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006112ba60208301846112f1565b600080600080600080600060c0888a03121561136957600080fd5b87359650602088013595506040880135945061138760608901611194565b9350608088013567ffffffffffffffff808211156113a457600080fd5b6113b08b838c016111b1565b909550935060a08a01359150808211156113c957600080fd5b5088016080818b0312156113dc57600080fd5b8091505092959891949750929550565b6000602082840312156113fe57600080fd5b6112ba82611194565b8681528560208201528460408201527fffffffffffffffff0000000000000000000000000000000000000000000000008460c01b166060820152818360688301376000910160680190815295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561149c5761149c61145b565b500390565b600181815b808511156114fa57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156114e0576114e061145b565b808516156114ed57918102915b93841c93908002906114a6565b509250929050565b60008261151157506001610edd565b8161151e57506000610edd565b8160018114611534576002811461153e5761155a565b6001915050610edd565b60ff84111561154f5761154f61145b565b50506001821b610edd565b5060208310610133831016604e8410600b841016171561157d575081810a610edd565b61158783836114a1565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156115b9576115b961145b565b029392505050565b60006112ba8383611502565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116055761160561145b565b500290565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261163f57600080fd5b83018035915067ffffffffffffffff82111561165a57600080fd5b6020019150600581901b36038213156111f357600080fd5b86815260a06020820152600061168b60a08301886112f1565b82810360408401528581527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8611156116c357600080fd5b8560051b808860208401376000910160200190815260608301949094525060800152949350505050565b6000602082840312156116ff57600080fd5b815180151581146112ba57600080fd5b600082516117218184602087016112c1565b9190910192915050565b60006020828403121561173d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212209c127c8d034832cef419654b8bb44e89665cadfddaa2ca69eca1d1a8b1e238e564736f6c63430008090033";

export interface FuelMessageInboxLibraryAddresses {
  ["__$53fd99b9b196b97281e9300b007c31c710$__"]: string;
}
